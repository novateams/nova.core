---
nexus_docker_network: local-network # The network where the container will be attached to. Usually comes from nova.core.docker role.
nexus_proxy_container_name: {} # Name of the proxy container to restart after composing Nexus.

nexus_container_config_folder: /srv/nexus # Path where Nexus application data is stored
nexus_fqdn: "{{ fqdn | default(ansible_fqdn) }}" # FQDN of the Nexus server, usually comes from Providentia or all.yml
nexus_configure: false # Set to true to also configure Nexus after installation
nexus_configure_ldap: false # Set to true to also configure LDAP after installation
nexus_create_repos: false # Set to true to also create default repositories after installation
nexus_allow_anonymous_access: true # Set to false to disable anonymous access
nexus_active_encryption_key_id: Primary Encryption Key # Name of the active encryption key that comes with this role
nexus_version: 3.83.0 # Nexus version to install

# Default is the built-in Nexus admin user. If set to a different value than admin, the role will create the user.
nexus_admin_username: admin

# The value of the password that will be set for the built-in admin user.
# This value is ONLY used if the nexus_admin_username value is something other than admin.
nexus_builtin_admin_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"

nexus_realms_to_activate: # List of authentication realms to activate
  - NexusAuthenticatingRealm
  - LdapRealm
  - NpmToken
  - DockerToken

nexus_ldap_administrators_group: # sAMAccountName of the pre-created group in LDAP that will be used to grant admin access to Nexus
nexus_ldap_configuration:
  name: "{{ nexus_ldap_name }}" # Name of the LDAP configuration
  # This is here to make sure that the configuration is not created twice
  id: "{{ omit if existing_ldap_servers.json == [] else existing_ldap_servers.json[0].id }}"
  protocol: "{{ nexus_ldap_protocol | default('ldaps') }}" # ldap or LDAPs
  useTrustStore: true
  host: "{{ nexus_ldap_host }}" # FQDN of the LDAP server
  port: "{{ nexus_ldap_port | default(636) }}" # Usually 389 for LDAP and 636 for LDAPs
  searchBase: "{{ nexus_ldap_search_base }}" # Base DistinguishedName (DN) where to look for users and groups
  authScheme: SIMPLE
  authRealm: ""
  authUsername: "{{ nexus_bind_user_dn }}" # DistinguishedName (DN) of the service account to connect to LDAP
  connectionTimeoutSeconds: 30
  connectionRetryDelaySeconds: 300
  maxIncidentsCount: 3
  userSubtree: true
  userObjectClass: user
  userLdapFilter: "{{ nexus_ldap_user_filter | default('') }}"
  userIdAttribute: sAMAccountName
  userRealNameAttribute: cn
  userEmailAddressAttribute: mail
  userPasswordAttribute: ""
  ldapGroupsAsRoles: true
  groupType: STATIC
  # The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to form the full Group search base DN
  groupBaseDn: "{{ nexus_groups_dn_under_searchbase }}"
  groupSubtree: true
  groupObjectClass: group
  groupIdAttribute: sAMAccountName
  groupMemberAttribute: "member:1.2.840.113556.1.4.1941:" # This is a magic variable that looks for nested group memberships
  groupMemberFormat: ${dn}
  userMemberOfAttribute: ""
  authPassword: "{{ nexus_bind_dn_password }}" # Password of the service account to connect to LDAP

nexus_repositories: "{{ nexus_default_repositories + nexus_extra_repositories }}" # List of repositories to create when nexus_create_repos is set to true
nexus_extra_repositories: [] # List of extra repositories to be created in addition to the nexus_default_repositories list

# The default-cleanup-policy does not actually exist in Nexus.
# It can be manually created and will then be automatically used by the repositories
nexus_default_repositories:
  # Chocolatey proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/nuget/proxy
    repo_body:
      name: chocolatey-proxy
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://community.chocolatey.org/api/v2/
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: false
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      nugetProxy:
        queryCacheItemMaxAge: 3600
        nugetVersion: V2
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Docker proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/docker/proxy
    repo_body:
      name: docker-proxy
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://registry-1.docker.io/
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      docker:
        v1Enabled: false
        forceBasicAuth: false
      dockerProxy:
        indexType: HUB
        indexUrl: https://index.docker.io/
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Rubygems proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/rubygems/proxy
    repo_body:
      name: rubygems
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://rubygems.org
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Kali apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: kali-rolling
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://http.kali.org/
        # 0 Means always check for updates
        # Otherwise will often experience Mirror sync in progress error
        contentMaxAge: 0
        metadataMaxAge: 0
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: main
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu noble-backports apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: noble-backports
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: noble-backports
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu noble-security apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: noble-security
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: noble-security
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu noble-updates apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: noble-updates
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: noble-updates
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu noble apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: noble
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: noble
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu jammy-backports apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: jammy-backports
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: jammy-backports
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu jammy-security apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: jammy-security
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: jammy-security
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu jammy-updates apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: jammy-updates
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: jammy-updates
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu jammy apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: jammy
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: jammy
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu focal-backports apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: focal-backports
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: focal-backports
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu focal-security apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: focal-security
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: focal-security
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu focal-updates apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: focal-updates
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: focal-updates
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu focal apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: focal
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://archive.ubuntu.com/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: focal
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian bullseye apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: bullseye
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://ftp.ee.debian.org/debian
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: bullseye
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian bullseye-security apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: bullseye-security
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://security.debian.org/debian-security
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: bullseye-security
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian bullseye-updates apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: bullseye-updates
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://ftp.ee.debian.org/debian
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: bullseye-updates
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian bookworm apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: bookworm
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://ftp.ee.debian.org/debian
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: bookworm
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian bookworm-security apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: bookworm-security
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://security.debian.org/debian-security
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: bookworm-security
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian bookworm-updates apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: bookworm-updates
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://ftp.ee.debian.org/debian
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: bookworm-updates
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian trixie apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: trixie
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://ftp.ee.debian.org/debian
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: trixie
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian trixie-security apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: trixie-security
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://security.debian.org/debian-security
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: trixie-security
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian trixie-updates apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: trixie-updates
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: http://ftp.ee.debian.org/debian
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: trixie-updates
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  ####################
  # Docker apt proxy #
  ####################

  # Ubuntu noble docker apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: noble-docker
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://download.docker.com/linux/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: noble
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu jammy docker apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: jammy-docker
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://download.docker.com/linux/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: jammy
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Ubuntu focal docker apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: focal-docker
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://download.docker.com/linux/ubuntu
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: focal
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian bookworm docker apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: bookworm-docker
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://download.docker.com/linux/debian
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: bookworm
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy

  # Debian bullseye docker apt proxy
  - api_endpoint: https://{{ nexus_fqdn }}/service/rest/v1/repositories/apt/proxy
    repo_body:
      name: bullseye-docker
      online: true
      storage:
        blobStoreName: default
        strictContentTypeValidation: true
      proxy:
        remoteUrl: https://download.docker.com/linux/debian
        contentMaxAge: 15
        metadataMaxAge: 15
      negativeCache:
        enabled: true
        timeToLive: 1440
      httpClient:
        blocked: false
        autoBlock: false
      apt:
        distribution: bullseye
        flat: false
      cleanup:
        policyNames:
          - default-cleanup-policy
