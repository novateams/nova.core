---
fqdn: # FQDN of the Nexus server nexus.example.org
docker_network: local-network # The network where the container will be attached to. Comes from nova.core.docker role.
nexus_proxy_container_name: {} # Name of the proxy container to restart after composing Nexus.

container_config_folder: /srv/nexus # Path where Nexus application data is stored
nexus_admin_username: admin # Built-in Nexus admin user
nexus_configure: false # Set to true to also configure Nexus after installation
nexus_configure_ldap: false # Set to true to also configure LDAP after installation
nexus_allow_anonymous_access: true # Set to false to disable anonymous access
nexus_version: 3.62.0 # Nexus version to install
nexus_trusted_ca_to_java: true # Looks up the trusted CAs from the host and adds it to the Java keystore of Nexus (required for LDAPs)

realms_to_activate: # List of authentication realms to activate
  - NexusAuthenticatingRealm
  - LdapRealm
  - NpmToken
  - DockerToken

nexus_ldap_administrators_group: # sAMAccountName of the pre-created group in LDAP that will be used to grant admin access to Nexus
nexus_ldap_configuration:
  name: "{{ nexus_ldap_name }}" # Name of the LDAP configuration
  id: "{{ omit if existing_ldap_servers.json == [] else existing_ldap_servers.json[0].id }}" # This is here to make sure that the configuration is not created twice
  protocol: "{{ nexus_ldap_ptocoal | default('ldaps') }}" # ldap or ldaps
  useTrustStore: true
  host: "{{ nexus_ldap_host }}" # FQDN of the LDAP server
  port: "{{ nexus_ldap_port | default(636) }}" # Usually 389 for ldap and 636 for ldaps
  searchBase: "{{ nexus_ldap_search_base }}" # Base DistinguishedName (DN) where to look for users and groups
  authScheme: SIMPLE
  authRealm: ""
  authUsername: "{{ nexus_bind_user_dn }}" # DistinguishedName (DN) of the service account to connect to LDAP
  connectionTimeoutSeconds: 30
  connectionRetryDelaySeconds: 300
  maxIncidentsCount: 3
  userSubtree: true
  userObjectClass: user
  userLdapFilter: ""
  userIdAttribute: sAMAccountName
  userRealNameAttribute: cn
  userEmailAddressAttribute: mail
  userPasswordAttribute: ""
  ldapGroupsAsRoles: true
  groupType: STATIC
  groupBaseDn: "{{ nexus_groups_dn_under_searchbase }}" # The relative DN where group objects are found (e.g. ou=Group). This value will have the Search base DN value appended to form the full Group search base DN
  groupSubtree: true
  groupObjectClass: group
  groupIdAttribute: sAMAccountName
  groupMemberAttribute: "member:1.2.840.113556.1.4.1941:" # This is a magic variable that looks for nested group memberships
  groupMemberFormat: ${dn}
  userMemberOfAttribute: ""
  authPassword: "{{ nexus_bind_dn_password }}" # Password of the service account to connect to LDAP
