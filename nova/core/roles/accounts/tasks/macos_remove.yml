---
- name: Listing user accounts created with {{ ansible_role_name }}...
  ansible.builtin.raw: |
    for profile in /Users/*/; do
        if [[ -f $profile/.created ]]; then
            echo $(basename $profile)
        fi
    done
  register: home_profiles
  changed_when: false

# Filtering out empty lines
- name: Getting profiles not defined in accounts list...
  ansible.builtin.set_fact:
    user_profiles_to_remove: "{{ home_profiles.stdout_lines | select('string') | select('regex', '.+')
      | difference(local_accounts_with_password | map(attribute='username')) }}"

- name: Removing stale user accounts and profiles...
  when:
    - user_profiles_to_remove != []
  block:
    - name: Handling reboot before removing accounts...
      when: accounts_reboot_before_remove | bool
      block:
        - name: Restarting {{ custom_vm_name | default(vm_name) }} VM...
          ansible.builtin.include_role:
            name: nova.core.powerstate
          vars:
            restart: true

        - name: Waiting until ssh is down for {{ inventory_hostname }}...
          ansible.builtin.wait_for:
            host: "{{ ansible_host }}"
            port: 22
            state: stopped
            timeout: 300
          delegate_to: localhost
          become: false

        - name: Waiting until ssh is up for {{ inventory_hostname }}...
          ansible.builtin.wait_for:
            host: "{{ ansible_host }}"
            port: 22
            state: started
            timeout: 300
          delegate_to: localhost
          become: false

    - name: Removing following accounts...
      ansible.builtin.raw: |
        dscl . -delete "/Users/{{ item }}"
        rm -rf /Users/{{ item }}
      loop: "{{ user_profiles_to_remove }}"
      changed_when: true
