---
- name: Including accounts configuration tasks block for non-containers...
  when:
    - customization_context == "host" # Alternative is container that doesn't need this role
    - infra_env != "my_host" # my_host is computer where you run the play from
  block:
    # Accounts creation preparation tasks
    - name: Creating required admins & users lists...
      ansible.builtin.set_fact:
        accounts: "{{ user_accounts + admin_accounts + domain_user_accounts }}"
        local_accounts_list: "{{ user_accounts + admin_accounts }}"
        domain_accounts_list: "{{ domain_user_accounts + admin_accounts }}"

    - name: Setting required password fact...
      ansible.builtin.set_fact:
        pregenerated_password: "{{ random_generated_password }}"
      when: not save_secrets_to_vault

    # Accounts creation tasks
    - name: Creation accounts for non-Netowork OS accounts...
      when:
        - ansible_network_os is not defined
        - "'os_macos' not in group_names"
      block:
        - name: Including Windows accounts creation tasks...
          ansible.builtin.include_tasks: windows_create.yml
          when: ansible_system == 'Win32NT'

        - name: Including Linux & BSD accounts creation tasks...
          ansible.builtin.include_tasks: unix_create.yml
          when: ansible_system in ["FreeBSD", "Linux"]

    - name: Configuring Network OS accounts...
      when: ansible_network_os is defined
      block:
        - name: Configure RouterOS accounts...
          include_tasks: routeros.yml
          when: ansible_network_os == 'community.routeros.routeros'

        - name: Configure VyOS accounts...
          include_tasks: vyos.yml
          when: ansible_network_os == 'vyos.vyos.vyos'

        - name: Configure Cisco-IOS accounts...
          include_tasks: ios.yml
          when: ansible_network_os == 'cisco.ios.ios'

        - name: Configure pfSense accounts...
          include_tasks: pfsense.yml
          when: ansible_network_os == 'pfsense'

    - name: Configure macOS accounts...
      ansible.builtin.include_tasks: macos.yml
      when: "'os_macos' in group_names"

    - name: Setting {{ ansible_deployer_username }} as connection user...
      ansible.builtin.set_fact:
        ansible_user: "{{ ansible_deployer_username }}"
        ansible_password: "{{ ansible_deployer_password | default(omit) }}" # Updated ansible_deployer_password
        ansible_ssh_extra_args: "{{ '-o IdentitiesOnly=no' if (fresh_deploy and infra_env == 'aws') else omit }}" # To avoid SSH MaxAuthTries limit

    - name: Including gather_facts role... # Since the connection account changed and we need to gather facts with the new account
      ansible.builtin.include_role:
        name: nova.core.gather_facts

    # Accounts removal tasks
    # This will lookup all user profiles that are not in the accounts list and remove them
    # This needs to be done after the correct ansible_user is set as not to try to remove the user you are logged in as
    - name: Removing accounts from non-Netowork OS...
      when:
        - accounts_remove_stale
        - ansible_network_os is not defined
        - "'os_macos' not in group_names"
      block:
        - name: Including Linux & BSD accounts removal tasks...
          ansible.builtin.include_tasks: unix_remove.yml
          when: ansible_system in ["FreeBSD", "Linux"]

        - name: Including Windows accounts removal tasks...
          ansible.builtin.include_tasks: windows_remove.yml
          when: ansible_system == 'Win32NT'
