{% for interface in interfaces %}

    # Configuring interface {{ loop.index }}
    {% set interface_loop = loop.index0 %}
    INTERFACE_{{ interface_loop }}_NAME=$(ifconfig -l | tr ' ' '\n' | grep -v 'lo0' | awk 'NR=={{ interface_loop +1 }}')

    {% if interface.addresses | map(attribute='mode') | intersect(['ipv4_dhcp']) %}

        pkill -f dhclient
        dhclient $INTERFACE_{{ interface_loop }}_NAME

    {% endif %}

    {% if interface.addresses | map(attribute='mode') | intersect(['ipv6_dhcp', 'ipv6_slaac']) %}

        ifconfig $INTERFACE_{{ interface_loop }}_NAME inet6 accept_rtadv auto_linklocal

    {% endif %}

    {% if interface.addresses != [] %}

        {% for ip_address in interface.addresses %}
        {% if (ip_address.mode == 'ipv4_static') and (ip_address.gateway != none) %}
        ifconfig $INTERFACE_{{ interface_loop }}_NAME inet {{ ip_address.address | ansible.utils.ipaddr('address') }} netmask {{ ip_address.address | ansible.utils.ipaddr('netmask') }}
        route delete default
        route add default {{ ip_address.gateway }}
        {% elif (ip_address.mode == 'ipv4_static') and (ip_address.gateway == none) %}
        ifconfig $INTERFACE_{{ interface_loop }}_NAME inet {{ ip_address.address | ansible.utils.ipaddr('address') }} netmask {{ ip_address.address | ansible.utils.ipaddr('netmask') }} alias
        {% elif (ip_address.mode == 'ipv6_static') and (ip_address.gateway != none) %}
        ifconfig $INTERFACE_{{ interface_loop }}_NAME inet6 {{ ip_address.address | ansible.utils.ipaddr('address') }} prefixlen {{ ip_address.address | ansible.utils.ipaddr('prefix') }}
        route -6 delete default
        route -6 add default {{ ip_address.gateway }}
        {% elif (ip_address.mode == 'ipv6_static') and (ip_address.gateway == none) %}
        ifconfig $INTERFACE_{{ interface_loop }}_NAME inet6 {{ ip_address.address | ansible.utils.ipaddr('address') }} prefixlen {{ ip_address.address | ansible.utils.ipaddr('prefix') }} alias
        {% endif %}
        {% endfor %}

        {% if extra_ipv4[interface_names[interface_loop]] is defined %}
        {% for extra_ipv4 in extra_ipv4[interface_names[interface_loop]] %}
        ifconfig $INTERFACE_{{ interface_loop }}_NAME inet {{ extra_ipv4 | ansible.utils.ipaddr('address') }} netmask {{ extra_ipv4 | ansible.utils.ipaddr('netmask') }} alias
        {% endfor %}
        {% endif %}

        {% if extra_ipv6[interface_names[interface_loop]] is defined %}
        {% for extra_ipv6 in extra_ipv6[interface_names[interface_loop]] %}
        ifconfig $INTERFACE_{{ interface_loop }}_NAME inet6 {{ extra_ipv6 | ansible.utils.ipaddr('address') }} prefixlen {{ extra_ipv6 | ansible.utils.ipaddr('prefix') }} alias
        {% endfor %}
        {% endif %}

    {% endif %}
{% endfor %}

{% if dns_server_combined != [] %}
echo "This file is re-generated on each startup by /etc/rc.local" > /etc/resolv.conf
{% if dns_domain != {} %}
echo "domain {{ dns_domain }}" >> /etc/resolv.conf
{% endif %}
{% if dns_search %}
echo "search {{ dns_search | join(' ') }}" >> /etc/resolv.conf
{% endif %}
{% for dns_address in dns_server_combined %}
echo "nameserver {{ dns_address }}" >> /etc/resolv.conf
{% endfor %}
{% if resolv_options %}
echo "options {{ resolv_options }}" >> /etc/resolv.conf
{% endif %}
{% endif %}