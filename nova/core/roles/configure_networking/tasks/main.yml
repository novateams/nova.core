---
- name: Including following configure_networking pre-roles...
  ansible.builtin.include_role:
    name: "{{ networking_pre_role }}"
  loop: "{{ configure_networking_pre_roles }}"
  loop_control:
    loop_var: networking_pre_role
  when: configure_networking_pre_roles != []

- name: Configuring VM network...
  when:
    - customization_context == "host"
    - fresh_deploy or reconfigure_network | bool
    - not skip_network_configuration | bool
  block:
    - name: Saving the original interfaces list...
      ansible.builtin.set_fact:
        original_interfaces: "{{ interfaces }}"

    # This is done so the role does not try configure interfaces that do not exists in the hypervisor
    - name: Removing non-existing networks from the interfaces list...
      ansible.builtin.set_fact:
        interfaces: "{{ interfaces | rejectattr('cloud_id', 'in', ['', none]) }}"

    # This is done to avoid issues with duplicate interface names in network configuration
    # Different OSs can use the same list and logic for interface naming
    - name: Building a list of unique names from following interfaces...
      ansible.builtin.set_fact:
        interface_names:
          "{{ interface_names | default([]) + [item | regex_replace('[^A-Za-z0-9_]', '_')
          if item not in interface_names | default([]) else item + idx | string] }}"
      loop: "{{ interfaces | map(attribute='network_id') }}"
      loop_control:
        index_var: idx

    - name: Configuring VM network in vSphere environment...
      ansible.builtin.include_tasks: vsphere/main.yml
      when: infra_env == 'vsphere'

    - name: Configuring VM network in Proxmox environment...
      ansible.builtin.include_tasks: proxmox/main.yml
      when: infra_env == 'proxmox'

    # This is to restore the original interfaces list so it can be used in later roles
    - name: Restoring the original interfaces list...
      ansible.builtin.set_fact:
        interfaces: "{{ original_interfaces }}"

- name: Including following configure_networking post-roles...
  ansible.builtin.include_role:
    name: "{{ networking_post_role }}"
  loop: "{{ configure_networking_post_roles }}"
  loop_control:
    loop_var: networking_post_role
  when: configure_networking_post_roles != []
