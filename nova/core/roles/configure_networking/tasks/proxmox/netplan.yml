---
- name: Creating a list of MAC addresses...
  ansible.builtin.set_fact:
    # Skipping the first MAC address as it is the loopback interface.
    configure_networking_mac_addresses: "{{ (proxmox_vm_info.proxmox_vms[0].network | map(attribute='hardware-address') | list)[1:] }}"

- name: Configuring netplan on Proxmox VM...
  become: false
  delegate_to: localhost
  block:
    - name: Templating network configuration to localhost...
      ansible.builtin.template:
        src: netplan.yml
        dest: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_netplan.yml
        lstrip_blocks: true
        mode: "0644"

    - name: Getting network configuration file contents...
      ansible.builtin.slurp:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_netplan.yml
      register: file_contents

    - name: Removing existing /etc/netplan folder...
      ansible.builtin.uri:
        url: "{{ proxmox_api_url }}/nodes/{{ proxmox_vm_info.proxmox_vms[0].node
          }}/qemu/{{ proxmox_vm_info.proxmox_vms[0].vmid }}/agent/exec"
        headers:
          Authorization: PVEAPIToken={{ proxmox_defaults.api_user }}!{{ proxmox_defaults.api_token_id }}={{ proxmox_defaults.api_token_secret }}
        method: POST
        body:
          command:
            - rm
            - -rf
            - /etc/netplan
        body_format: json
        validate_certs: "{{ proxmox_validate_certs }}"
      register: network_config_command

    - name: Including command run check task...
      ansible.builtin.include_tasks: command_run_check.yml

    - name: Recreating /etc/netplan folder...
      ansible.builtin.uri:
        url: "{{ proxmox_api_url }}/nodes/{{ proxmox_vm_info.proxmox_vms[0].node
          }}/qemu/{{ proxmox_vm_info.proxmox_vms[0].vmid }}/agent/exec"
        headers:
          Authorization: PVEAPIToken={{ proxmox_defaults.api_user }}!{{ proxmox_defaults.api_token_id }}={{ proxmox_defaults.api_token_secret }}
        method: POST
        body:
          command:
            - mkdir
            - -p
            - /etc/netplan
        body_format: json
        validate_certs: "{{ proxmox_validate_certs }}"
      register: network_config_command

    - name: Including command run check task...
      ansible.builtin.include_tasks: command_run_check.yml

    - name: Writing netplan configuration to {{ custom_vm_name | default(vm_name) }}...
      ansible.builtin.uri:
        url: "{{ proxmox_api_url }}/nodes/{{ proxmox_vm_info.proxmox_vms[0].node
          }}/qemu/{{ proxmox_vm_info.proxmox_vms[0].vmid }}/agent/file-write"
        headers:
          Authorization: PVEAPIToken={{ proxmox_defaults.api_user }}!{{ proxmox_defaults.api_token_id }}={{ proxmox_defaults.api_token_secret }}
        method: POST
        body:
          content: "{{ file_contents.content | b64decode }}"
          file: /etc/netplan/01-netcfg.yaml
        body_format: json
        validate_certs: "{{ proxmox_validate_certs }}"
      register: network_config_command

    - name: Fixing permissions on netplan configuration file...
      ansible.builtin.uri:
        url: "{{ proxmox_api_url }}/nodes/{{ proxmox_vm_info.proxmox_vms[0].node
          }}/qemu/{{ proxmox_vm_info.proxmox_vms[0].vmid }}/agent/exec"
        headers:
          Authorization: PVEAPIToken={{ proxmox_defaults.api_user }}!{{ proxmox_defaults.api_token_id }}={{ proxmox_defaults.api_token_secret }}
        method: POST
        body:
          command:
            - chmod
            - 600
            - /etc/netplan/01-netcfg.yaml
        body_format: json
        validate_certs: "{{ proxmox_validate_certs }}"
      register: network_config_command

    - name: Including command run check task...
      ansible.builtin.include_tasks: command_run_check.yml

    - name: Applying netplan...
      ansible.builtin.uri:
        url: "{{ proxmox_api_url }}/nodes/{{ proxmox_vm_info.proxmox_vms[0].node
          }}/qemu/{{ proxmox_vm_info.proxmox_vms[0].vmid }}/agent/exec"
        headers:
          Authorization: PVEAPIToken={{ proxmox_defaults.api_user }}!{{ proxmox_defaults.api_token_id }}={{ proxmox_defaults.api_token_secret }}
        method: POST
        body:
          command:
            - netplan
            - apply
        body_format: json
        validate_certs: "{{ proxmox_validate_certs }}"
      register: network_config_command

    - name: Including command run check task...
      ansible.builtin.include_tasks: command_run_check.yml
