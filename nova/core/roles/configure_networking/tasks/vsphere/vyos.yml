---
- name: Setting VMtools connection parameters...
  ansible.builtin.set_fact:
    ansible_connection: community.vmware.vmware_tools
    ansible_vmware_host: "{{ vmware_defaults.hostname }}"
    ansible_vmware_user: "{{ vmware_defaults.username }}"
    ansible_vmware_password: "{{ vmware_defaults.password }}"
    ansible_vmware_validate_certs: true
    ansible_vmware_guest_path: "{{ datacenter }}/vm/{{ folder }}/{{ custom_vm_name | default(vm_name) }}"
    ansible_vmware_tools_user: "{{ template_username if fresh_deploy else admin_account }}"
    ansible_vmware_tools_password: "{{ template_password if fresh_deploy else admin_account_password }}"
    ansible_shell_type: "{{ default_ansible_shell_type }}"
  no_log: true

- name: Wiping all interfaces from config.boot file...
  ansible.builtin.shell: |
    sed -i '/^service {/,$!d' /config/config.boot
    echo -e "interfaces {\n loopback lo\n}\n$(cat /config/config.boot)" > /config/config.boot
  changed_when: true

### Interfaces will get autogenerated again
- name: Rebooting {{ custom_vm_name | default(vm_name) }}...
  vmware.vmware_rest.vcenter_vm_guest_power:
    state: reboot
    vm: "{{ created_vm_info.value[0].vm | default(vcenter_vm_info.value[0].vm) }}"
  delegate_to: localhost
  become: false

- name: Waiting for system to become reachable again...
  ansible.builtin.wait_for_connection:
    timeout: 300

- name: Uploading VyoS configuration script...
  ansible.builtin.template:
    src: config.boot
    dest: /home/vyos/firstconfig.sh
    force: true
    mode: "0766"

- name: Running VyoS configuration script...
  ansible.builtin.command: /bin/vbash /home/vyos/firstconfig.sh
  changed_when: true
