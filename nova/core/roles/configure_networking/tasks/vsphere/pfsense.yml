---
- name: ERROR
  ansible.builtin.fail:
    msg: |
      Too many egress interfaces configured for {{ inventory_hostname }}.
      pfSense supports only one egress interface per VM.
  when: interfaces | selectattr('egress', 'equalto', true) | list | length > 1

- name: Configuring pfSense networking...
  become: false
  delegate_to: localhost
  block:
    - name: Preparing /conf/config.xml download...
      ansible.builtin.uri:
        url: https://{{ vcenter_hostname }}/api/vcenter/vm/{{ created_vm_info.value[0].vm | default(vcenter_vm_info.value[0].vm) }}/guest/filesystem?action=create
        method: POST
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        body:
          credentials: "{{ rest_api_credentials }}"
          spec:
            path: /conf/config.xml
        status_code: 201
        body_format: json
        validate_certs: "{{ vmware_defaults.validate_certs }}"
      register: file_download_prep

    - name: Downloading /conf/config.xml...
      ansible.builtin.uri:
        url: "{{ file_download_prep.json }}"
        method: GET
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        dest: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        status_code: 200
        body_format: json
        validate_certs: "{{ vmware_defaults.validate_certs }}"

    - name: Deleting existing interfaces...
      community.general.xml:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        xpath: /pfsense/interfaces/*
        state: absent

    - name: Deleting existing gateways...
      community.general.xml:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        xpath: /pfsense/gateways/*
        state: absent

    - name: Deleting existing DNS servers...
      community.general.xml:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        xpath: /pfsense/system/dnsserver
        state: absent

    - name: Templating interfaces config...
      ansible.builtin.template:
        src: pfsense.yml
        dest: "{{ inventory_dir }}/{{ project_fullname | default('') }}_{{ inventory_hostname }}_pfsense_interfaces.yml"
        lstrip_blocks: true
        mode: "0600"

    - name: Including interfaces config...
      ansible.builtin.include_vars:
        file: "{{ inventory_dir }}/{{ project_fullname | default('') }}_{{ inventory_hostname }}_pfsense_interfaces.yml"

    - name: Configuring following pfSense interfaces for {{ inventory_hostname }}...
      community.general.xml:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        xpath: /pfsense/interfaces
        pretty_print: true
        add_children: "{{ pfsense_interfaces }}"

    - name: Configuring egress interface gateways for {{ inventory_hostname }}...
      community.general.xml:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        xpath: /pfsense/gateways
        pretty_print: true
        add_children: "{{ pfsense_gateways }}"

    - name: Configuring following DNS server for {{ inventory_hostname }}...
      community.general.xml:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        xpath: /pfsense/system
        pretty_print: true
        add_children:
          - dnsserver: "{{ item }}"
      loop: "{{ dns_server_combined }}"

    - name: Getting {{ inventory_dir }}/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml file info...
      ansible.builtin.stat:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
      register: file_size

    - name: Preparing {{ inventory_dir }}/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml file upload...
      ansible.builtin.uri:
        url: https://{{ vcenter_hostname }}/api/vcenter/vm/{{ created_vm_info.value[0].vm | default(vcenter_vm_info.value[0].vm) }}/guest/filesystem?action=create
        method: POST
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        body:
          credentials: "{{ rest_api_credentials }}"
          spec:
            attributes:
              overwrite: true
              size: "{{ file_size.stat.size }}"
            path: /conf/config.xml
        status_code: 201
        body_format: json
        validate_certs: "{{ vmware_defaults.validate_certs }}"
      register: file_upload_prep

    - name: Uploading {{ inventory_dir }}/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml file...
      ansible.builtin.uri:
        url: "{{ file_upload_prep.json }}"
        method: PUT
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        src: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        status_code: 200
        body_format: json
        validate_certs: "{{ vmware_defaults.validate_certs }}"

    - name: Reloading {{ inventory_hostname }} configuration...
      ansible.builtin.uri:
        url: https://{{ vcenter_hostname }}/api/vcenter/vm/{{ created_vm_info.value[0].vm | default(vcenter_vm_info.value[0].vm) }}/guest/processes?action=create
        method: POST
        headers:
          vmware-api-session-id: "{{ vcenter_session_api_key.json }}"
        body:
          credentials: "{{ rest_api_credentials }}"
          spec:
            arguments: -c "/etc/rc.reload_all"
            path: /bin/tcsh
        status_code: 201
        body_format: json
        validate_certs: "{{ validate_vmware_certs }}"

    - name: Removing local config.xml file...
      ansible.builtin.file:
        path: /tmp/{{ project_fullname | default('') }}_{{ inventory_hostname }}_config.xml
        state: absent
