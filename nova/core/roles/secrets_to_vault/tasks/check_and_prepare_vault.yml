---
- name: Including Vault preparation tasks...
  delegate_to: localhost
  become: false
  block:
    - name: Checking if {{ sct.secrets_vault_engine_path | default(secrets_vault_engine_path) }}/data/{{
        sct.secrets_vault_secrets_path | default(secrets_vault_secrets_path) }} path already exists...
      ansible.builtin.uri:
        url: "{{ secrets_vault_data_fullpath }}"
        method: GET
        headers:
          X-Vault-Request: true
          X-Vault-Token: "{{ vault_access_token | default(auth.json.auth.client_token) }}"
        body_format: json
        status_code:
          - 200
          - 404
        validate_certs: "{{ validate_vault_certs }}"
      register: secrets_path

    - name: Creating {{ sct.secrets_vault_engine_path | default(secrets_vault_engine_path) }}/data/{{
        sct.secrets_vault_secrets_path | default(secrets_vault_secrets_path) }} path...
      ansible.builtin.uri:
        url: "{{ secrets_vault_data_fullpath }}"
        method: POST
        headers:
          X-Vault-Request: true
          X-Vault-Token: "{{ vault_access_token | default(auth.json.auth.client_token) }}"
        body:
          data: {}
        validate_certs: "{{ validate_vault_certs }}"
        body_format: json
      when: secrets_path.status == 404

    - name: Listing all secrets in {{ sct.secrets_vault_engine_path | default(secrets_vault_engine_path) }}/data/{{
        sct.secrets_vault_secrets_path | default(secrets_vault_secrets_path) }}...
      ansible.builtin.uri:
        url: "{{ secrets_vault_data_fullpath }}"
        method: GET
        headers:
          X-Vault-Request: true
          X-Vault-Token: "{{ vault_access_token | default(auth.json.auth.client_token) }}"
        body_format: json
        validate_certs: "{{ validate_vault_certs }}"
      register: existing_secrets
