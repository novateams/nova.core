---
- name: Configuring sysctl...
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    sysctl_file: /etc/sysctl.d/caddy.conf
    state: present
    reload: true
  register: configure_caddy_sysctl
  until: not configure_caddy_sysctl.failed
  retries: 5
  delay: 1
  loop:
    - name: net.core.rmem_max
      value: 2500000
    - name: net.core.wmem_max
      value: 2500000

- name: Creating Caddy folders...
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    recurse: true
  loop:
    - "{{ caddy_config_folder }}"
    - "{{ caddy_config_folder }}/etc"
    - "{{ caddy_config_folder }}/data"
    - "{{ caddy_config_folder }}/config"
    - "{{ caddy_config_folder }}/logs"
    - "{{ caddy_config_folder }}/www"
    - "{{ caddy_certificates_folder }}"

- name: Templating Caddy configuration files for {{ inventory_hostname }}...
  ansible.builtin.template:
    src: caddy.yml
    dest: "{{ caddy_config_folder }}/docker-compose.yml"
    mode: "0644"
    lstrip_blocks: true

# Self signed certificate
- name: Checking & Generating a self-signed certificate...
  when: caddy_generate_self_signed_certificate
  block:
    - name: Checking for existing self-signed certificate...
      ansible.builtin.stat:
        path: "{{ caddy_self_signed_certificate_path }}"
      register: certificate

    - name: Getting info about existing self-signed certificate...
      community.crypto.x509_certificate_info:
        path: "{{ caddy_self_signed_certificate_path }}"
        valid_at:
          certificate_valid: "+20d"
      register: certificate_is_valid
      when: certificate.stat.exists

    - name: Generating self-signed certificate...
      when: (not certificate.stat.exists or not certificate_is_valid.valid_at.certificate_valid)
      block:
        - name: Installing self-signed certificate dependencies...
          ansible.builtin.apt:
            name: python3-cryptography
            state: present

        - name: Generating selfsigned private key...
          community.crypto.openssl_privatekey:
            path: "{{ caddy_self_signed_certificate_key_path }}"
            curve: secp256r1
            type: ECC

        - name: Generating selfsigned CSR...
          community.crypto.openssl_csr:
            path: /tmp/selfsigned_{{ fqdn }}.csr
            privatekey_path: "{{ caddy_self_signed_certificate_key_path }}"
            common_name: "{{ caddy_self_signed_certificate_common_name }}"

        - name: Signing selfsigned CSR...
          community.crypto.x509_certificate:
            path: "{{ caddy_self_signed_certificate_path }}"
            privatekey_path: "{{ caddy_self_signed_certificate_key_path }}"
            csr_path: /tmp/selfsigned_{{ fqdn }}.csr
            provider: selfsigned
