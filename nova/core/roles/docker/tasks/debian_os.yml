---
- name: Installing apt dependencies...
  ansible.builtin.apt:
    update_cache: true
    name:
      - gpg
      - gpg-agent
  register: docker_dependencies_install
  until: not docker_dependencies_install.failed # Because sometimes the primary DNS is not up yet or egress FW is still being deployed
  retries: 10
  delay: 6

- name: Including Docker for Kali APT configuration block...
  when: ansible_facts.lsb.id == "Kali"
  block:
    - name: Adding Docker GPG apt key...
      ansible.builtin.apt_key:
        url: "{{ docker_apt_proxy }}/gpg"
        keyring: /etc/apt/trusted.gpg.d/docker.gpg
        state: present
      register: docker_apt_key
      until: not docker_apt_key.failed # Because sometimes the primary DNS is not up yet or egress FW is still being deployed
      retries: 10
      delay: 6
      vars:
        # Overriding ansible_distribution to match Debian because Kali does not have it's own Docker repository
        ansible_distribution: debian

    # This is to remove the legacy Docker repository filename that was previously used with this role
    # This task should be removed on 01.09.2024
    - name: Removing existing legacy Docker repository filename...
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/download_docker_com_linux_debian.list
        state: absent

    # Using copy because ansible.builtin.apt_repository does not have a feature to override existing repository in *.list file
    - name: Adding Docker repository...
      ansible.builtin.copy:
        content: |
          deb [arch=amd64] {{ docker_apt_proxy }} {{ ansible_distribution_release }} stable
        dest: /etc/apt/sources.list.d/docker.list
        mode: "0644"
      vars:
        # Overriding ansible_distribution and ansible_distribution_release to match Debian because Kali does not have it's own Docker repository
        ansible_distribution_release: bookworm
        ansible_distribution: debian

- name: Including Docker for not Kali APT configuration block...
  when: ansible_facts.lsb.id != "Kali"
  block:
    - name: Adding Docker GPG apt key...
      ansible.builtin.apt_key:
        url: "{{ docker_apt_proxy }}/gpg"
        keyring: /etc/apt/trusted.gpg.d/docker.gpg
        state: present
      register: docker_apt_key
      until: not docker_apt_key.failed # Because sometimes the primary DNS is not up yet or egress FW is still being deployed
      retries: 10
      delay: 6

    # This is to remove the legacy Docker repository filename that was previously used with this role
    # This task should be removed on 01.09.2024
    - name: Removing existing legacy Docker repository filename...
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/download_docker_com_linux_{{ ansible_distribution | lower }}.list
        state: absent

    # Using copy because ansible.builtin.apt_repository does not have a feature to override existing repository in *.list file
    - name: Adding Docker repository...
      ansible.builtin.copy:
        content: |
          deb [arch=amd64] {{ docker_apt_proxy }} {{ ansible_distribution_release }} stable
        dest: /etc/apt/sources.list.d/docker.list
        mode: "0644"

- name: Installing Docker and requirements...
  ansible.builtin.apt:
    name:
      - containerd.io
      - docker-ce-cli{{ '=5:' + docker_engine_version + '*' if docker_engine_version != {} else none }}
      - docker-ce{{ '=5:' + docker_engine_version + '*' if docker_engine_version != {} else none }}
      - docker-compose-plugin
      - python3-docker
      - python3-jsondiff
      - python3-pip
      - python3-requests
      - python3-setuptools
      - python3-wheel
    state: present
    allow_downgrade: true
    update_cache: true
  register: docker_install
  until: not docker_install.failed # Because sometimes the primary DNS is not up yet
  retries: 6
  delay: 5

- name: "{{ 'Locking' if docker_engine_version != {} else 'Unlocking' }} Docker engine version..." # This is to avoid updating Docker with apt upgrade
  ansible.builtin.dpkg_selections:
    name: "{{ docker_package }}"
    selection: "{{ 'hold' if docker_engine_version != {} else 'install' }}"
  loop_control:
    loop_var: docker_package
  loop:
    - docker-ce-cli
    - docker-ce

- name: Adding Docker daemon config...
  ansible.builtin.template:
    src: "{{ docker_daemon_template }}"
    dest: /etc/docker/daemon.json
    lstrip_blocks: true
    mode: "0644"
  register: daemon_config

- name: Restarting docker service...
  ansible.builtin.systemd:
    name: docker.service
    enabled: true
    daemon_reload: true
    state: restarted
  when: daemon_config.changed

- name: Including default network creation tasks...
  when: docker_create_network
  block:
    - name: Checking if {{ docker_network.name }} exists...
      community.docker.docker_network_info:
        name: "{{ docker_network.name }}"
      register: docker_network_check

    - name: Creating {{ docker_network.name }}...
      community.docker.docker_network:
        name: "{{ docker_network.name }}"
        enable_ipv6: "{{ docker_network.enable_ipv6 }}"
        ipam_config:
          - subnet: "{{ docker_network.ipv4_subnet }}"
          - subnet: "{{ docker_network.ipv6_subnet }}"
      when: not docker_network_check.exists
