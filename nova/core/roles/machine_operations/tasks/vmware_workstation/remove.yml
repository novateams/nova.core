---
- name: NO UNDEPLOY OR IMMUTABLE SET
  ansible.builtin.fail:
    msg: "{{ inventory_hostname }} HAS no_undeploy or immutable SET AND WON'T BE REMOVED"
  when: immutable or no_undeploy or 'immutable' in group_names or 'no_undeploy' in group_names

- name: Including VMware Workstation remove tasks...
  become: false
  block:
    - name: Checking if {{ inventory_hostname }} exists...
      ansible.builtin.stat:
        path: "{{ local_vmx_path }}"
      register: vm_exists

    - name: Removing {{ inventory_hostname }} if it exists...
      when: vm_exists.stat.exists
      block:
        - name: Listing running VMs...
          ansible.builtin.command: vmrun -T ws list
          register: running_vms

        - name: Stopping {{ inventory_hostname }}...
          ansible.builtin.command: vmrun -T ws stop {{ local_vmx_path }} hard
          when: local_vmx_path in running_vms.stdout_lines

        - name: Removing VM...
          block:
            - name: Removing {{ inventory_hostname }}...
              ansible.builtin.command: vmrun -T ws deleteVM {{ local_vmx_path }}

          # This rescue is required because if user restarted the VMware Workstation and the VM is still running the deleteVM command will incorrectly error with "Insufficient permissions"
          rescue:
            - name: Removing {{ inventory_hostname }} folder...
              ansible.builtin.file:
                path: "{{ local_vm_folder }}/{{ custom_vm_name | default(vm_name) }}"
                state: absent

    - name: Removing {{ inventory_hostname }} folder...
      ansible.builtin.file:
        path: "{{ local_vm_folder }}/{{ custom_vm_name | default(vm_name) }}"
        state: absent

    - name: Stopping play...
      ansible.builtin.meta: end_host
      when: deploy_mode == 'undeploy'
