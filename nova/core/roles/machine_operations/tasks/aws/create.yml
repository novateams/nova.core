---
- name: Creating AWS EC2 instance for {{ inventory_hostname }}...
  delegate_to: localhost
  become: false
  block:
    - name: Getting all OS images...
      amazon.aws.ec2_ami_info:
        owners: "{{ ami_owner_id }}"
        filters:
          name: "{{ ami_name_search_string }}"
          architecture: x86_64
      register: found_amis

    - name: Sorting images by creation_date...
      ansible.builtin.set_fact:
        all_images: "{{ found_amis.images | sort(attribute='creation_date') }}"

    - name: Gather information about all instances in {{ aws_defaults.region }}...
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ custom_vm_name | default(vm_name) }}"
      register: ec2_instance_info

    - name: Sorting instances by launch_time...
      ansible.builtin.set_fact:
        existing_instances: "{{ ec2_instance_info.instances | sort(attribute='launch_time') }}"

    - name: Setting fresh_deploy as fact...
      ansible.builtin.set_fact:
        fresh_deploy: true
      when: existing_instances == [] or existing_instances[-1].state.name == 'terminated'

    - name: Removing existing ssh temp key for {{ hostname }}... # If for some reason it was present from previous deploy
      amazon.aws.ec2_key:
        name: "{{ custom_vm_name | default(vm_name) }}"
        state: absent

    - name: Including fresh deploy tasks...
      when: fresh_deploy
      block:
        - name: Creating a temp ssh key for {{ hostname }}...
          amazon.aws.ec2_key:
            name: "{{ custom_vm_name | default(vm_name) }}"
          register: aws_temp_private_key

        - name: Saving {{ hostname }} temp private key to file...
          ansible.builtin.copy:
            content: "{{ aws_temp_private_key.key.private_key }}"
            dest: "{{ temp_ssh_key_path }}"
            mode: "600"

    - name: Creating AWS security group for {{ custom_vm_name | default(vm_name) }}...
      amazon.aws.ec2_security_group:
        name: "{{ custom_vm_name | default(vm_name) }}"
        description: Security group for {{ custom_vm_name | default(vm_name) }}
        rules: "{{ aws_security_group_rules }}"
        state: present

    - name: Launching {{ hostname }} EC2 instance...
      amazon.aws.ec2_instance:
        name: "{{ custom_vm_name | default(vm_name) }}"
        key_name: "{{ custom_vm_name | default(vm_name) }}"
        vpc_subnet_id: "{{ ec2_subnet_id | default(omit) }}"
        instance_type: "{{ aws_vm_size | default('t3.micro') }}"
        security_group: "{{ aws_security_group | default(custom_vm_name) | default(vm_name) }}"
        network:
          assign_public_ip: true
        image_id: "{{ all_images[-1].image_id }}"
      register: created_ec2_instance
      until:
        - created_ec2_instance.instances[0].public_ip_address is defined
      retries: 24
      delay: 5

    - name: Setting primary IPv4 as fact...
      ansible.builtin.set_fact:
        primary_ipv4: "{{ created_ec2_instance.instances[0].public_ip_address }}"

    - name: Removing created ssh temp key for {{ hostname }}...
      amazon.aws.ec2_key:
        name: "{{ custom_vm_name | default(vm_name) }}"
        state: absent
