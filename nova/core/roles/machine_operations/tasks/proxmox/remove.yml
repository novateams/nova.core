---
- name: NO UNDEPLOY
  ansible.builtin.fail:
    msg: "{{ inventory_hostname }} Has no_undeploy set and won't be removed"
  when: no_undeploy or ['no_undeploy', 'custom_no_undeploy'] | intersect(group_names) | length > 0

- name: Removing machine and any leftover disks...
  when: proxmox_vm_exists.proxmox_vms != []
  delegate_to: localhost
  become: false
  block:
    - name: Stopping {{ custom_vm_name | default(vm_name) }}...
      ansible.builtin.uri:
        url: "{{ proxmox_api_url }}/nodes/{{ proxmox_vm_exists.proxmox_vms[0].node }}/qemu/{{ proxmox_vm_exists.proxmox_vms[0].vmid }}/status/stop"
        headers:
          Authorization: PVEAPIToken={{ proxmox_defaults.api_user }}!{{ proxmox_defaults.api_token_id }}={{ proxmox_defaults.api_token_secret }}
        method: POST
        validate_certs: "{{ proxmox_validate_certs }}"
      retries: 6
      delay: 5

    - name: Removing {{ custom_vm_name | default(vm_name) }} VM...
      community.proxmox.proxmox_kvm:
        name: "{{ custom_vm_name | default(vm_name) }}"
        vmid: "{{ proxmox_vm_exists.proxmox_vms[0].vmid | default(machine_operations_proxmox_vmid) }}"
        state: absent
        force: true
        timeout: "{{ proxmox_machine_operations_operation_timeout }}"

    - name: Getting the time...
      ansible.builtin.setup:
        filter: "*_time"
      register: proxmox_disk_cleanup_start_time

    - name: Including disk_cleanup tasks...
      ansible.builtin.include_tasks: disk_cleanup.yml

- name: Stopping play...
  ansible.builtin.meta: end_host
  when: deploy_mode == 'undeploy'
