---
- name: Getting the time...
  ansible.builtin.setup:
    filter: "*_time"

- name: Creating a live snapshot...
  ansible.builtin.shell: DISPLAY={{ lookup('env', 'DISPLAY') }} vmrun -T ws snapshot {{ snapshots_local_vmx_path }} {{ snapshot_name | default(ansible_date_time.iso8601) }}
  when: live_snap | bool # Because CLI detects extra var as string

- name: Including snapshot tasks...
  when: not live_snap | bool # Because CLI detects extra var as string
  block:
    - name: Listing running VMs...
      ansible.builtin.shell: DISPLAY={{ lookup('env', 'DISPLAY') }} vmrun -T ws list
      register: running_vms

    - name: Stopping {{ inventory_hostname }}...
      ansible.builtin.shell: DISPLAY={{ lookup('env', 'DISPLAY') }} vmrun -T ws stop {{ snapshots_local_vmx_path }} soft
      when: snapshots_local_vmx_path in running_vms.stdout_lines

    - name: Removing all existing snapshots...
      ansible.builtin.shell: DISPLAY={{ lookup('env', 'DISPLAY') }} vmrun -T ws deleteSnapshot {{ snapshots_local_vmx_path }} {{ all_snapshots.stdout_lines[1] }} andDeleteChildren #[1] because the first item in the list is title
      when: snapshot_mode == 're-snap'

    - name: Creating a snapshot...
      ansible.builtin.shell: DISPLAY={{ lookup('env', 'DISPLAY') }} vmrun -T ws snapshot {{ snapshots_local_vmx_path }} {{ snapshot_name | default(ansible_date_time.iso8601) }}

    - name: Starting {{ inventory_hostname }}...
      ansible.builtin.shell: DISPLAY={{ lookup('env', 'DISPLAY') }} vmrun -T ws start {{ snapshots_local_vmx_path }}
