realm: Providentia
enabled: true
roles:
  client:
    Providentia:
      - name: Providentia_TE_GT
        composite: false
        clientRole: true
        attributes: {}
      - name: Providentia_TE_RT
        composite: false
        clientRole: true
        attributes: {}
      - name: Providentia_TE_Admin
        composite: false
        clientRole: true
        attributes: {}
      - name: Providentia_Admin
        composite: false
        clientRole: true
        attributes: {}
groups: []
clients:
  - clientId: Providentia
    baseUrl: "https://{{ providentia_app_fqdn }}"
    surrogateAuthRequired: false
    enabled: true
    alwaysDisplayInConsole: false
    clientAuthenticatorType: client-secret
    secret: 00000000-0000-0000-0000-000000000000
    redirectUris:
      - "https://{{ providentia_app_fqdn }}/*"
    webOrigins:
      - "https://{{ providentia_app_fqdn }}"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: false
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    authenticationFlowBindingOverrides: {}
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    defaultClientScopes:
      - profile
      - providentia-roles
      - email
    optionalClientScopes: []
clientScopes:
  - name: profile
    description: "OpenID Connect built-in scope: profile"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${profileScopeConsentText}"
    protocolMappers:
      - name: locale
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: locale
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: locale
          jsonType.label: String
      - name: "given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: username
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        consentRequired: false
        config:
          id.token.claim: "true"
          access.token.claim: "true"
          userinfo.token.claim: "true"
      - name: "family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "updated at"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: updatedAt
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: updated_at
          jsonType.label: String
      - name: profile
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: profile
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: profile
          jsonType.label: String
      - name: birthdate
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: birthdate
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: birthdate
          jsonType.label: String
      - name: picture
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: picture
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: picture
          jsonType.label: String
      - name: website
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: website
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: website
          jsonType.label: String
      - name: "middle name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: middleName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: middle_name
          jsonType.label: String
      - name: nickname
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: nickname
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: nickname
          jsonType.label: String
      - name: gender
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: gender
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: gender
          jsonType.label: String
      - name: zoneinfo
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: zoneinfo
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: zoneinfo
          jsonType.label: String
  - name: email
    description: "OpenID Connect built-in scope: email"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${emailScopeConsentText}"
    protocolMappers:
      - name: email
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "email verified"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: emailVerified
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email_verified
          jsonType.label: boolean
  - name: phone
    description: "OpenID Connect built-in scope: phone"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${phoneScopeConsentText}"
    protocolMappers:
      - name: "phone number verified"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: phoneNumberVerified
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: phone_number_verified
          jsonType.label: boolean
      - name: "phone number"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: phoneNumber
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: phone_number
          jsonType.label: String
  - name: web-origins
    description: "OpenID Connect scope for add allowed web origins to the access token"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "false"
      display.on.consent.screen: "false"
      consent.screen.text: ""
    protocolMappers:
      - name: "allowed web origins"
        protocol: openid-connect
        protocolMapper: oidc-allowed-origins-mapper
        consentRequired: false
        config: {}
  - name: role_list
    description: "SAML role list"
    protocol: saml
    attributes:
      consent.screen.text: "${samlRoleListScopeConsentText}"
      display.on.consent.screen: "true"
    protocolMappers:
      - name: "role list"
        protocol: saml
        protocolMapper: saml-role-list-mapper
        consentRequired: false
        config:
          single: "false"
          attribute.nameformat: Basic
          attribute.name: Role
  - name: address
    description: "OpenID Connect built-in scope: address"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${addressScopeConsentText}"
    protocolMappers:
      - name: address
        protocol: openid-connect
        protocolMapper: oidc-address-mapper
        consentRequired: false
        config:
          user.attribute.formatted: formatted
          user.attribute.country: country
          user.attribute.postal_code: postal_code
          userinfo.token.claim: "true"
          user.attribute.street: street
          id.token.claim: "true"
          user.attribute.region: region
          access.token.claim: "true"
          user.attribute.locality: locality
  - name: offline_access
    description: "OpenID Connect built-in scope: offline_access"
    protocol: openid-connect
    attributes:
      consent.screen.text: "${offlineAccessScopeConsentText}"
      display.on.consent.screen: "true"
  - name: providentia-roles
    description: ""
    protocol: openid-connect
    attributes:
      include.in.token.scope: "false"
      display.on.consent.screen: "true"
      consent.screen.text: "${rolesScopeConsentText}"
    protocolMappers:
      - name: "client roles"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-client-role-mapper
        consentRequired: false
        config:
          multivalued: "true"
          user.attribute: foo
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: "resource_access.${client_id}.roles"
          jsonType.label: String
          usermodel.clientRoleMapping.clientId: Providentia
      - name: "realm roles"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-realm-role-mapper
        consentRequired: false
        config:
          multivalued: "true"
          user.attribute: foo
          id.token.claim: "false"
          access.token.claim: "true"
          claim.name: realm_access.roles
          jsonType.label: String
users:
  - username: providentia.admin
    email: providentia.admin@localhost
    enabled: true
    firstName: Providentia
    lastName: Admin
    clientRoles:
      Providentia:
        - Providentia_Admin
    credentials:
      - type: password
        value: providentia.admin-pass
  - username: providentia.teadmin
    email: providentia.teadmin@localhost
    enabled: true
    firstName: Providentia
    lastName: Admin
    clientRoles:
      Providentia:
        - Providentia_TE_Admin
    credentials:
      - type: password
        value: providentia.teadmin-pass
  - username: providentia.rt
    email: providentia.rt@localhost
    enabled: true
    firstName: Red
    lastName: Team
    clientRoles:
      Providentia:
        - Providentia_TE_GT
        - Providentia_TE_RT
    credentials:
      - type: password
        value: providentia.rt-pass
  - username: providentia.gt
    email: providentia.gt@localhost
    enabled: true
    firstName: Green
    lastName: Team
    clientRoles:
      Providentia:
        - Providentia_TE_GT
    credentials:
      - type: password
        value: providentia.gt-pass
defaultDefaultClientScopes:
  - role_list
  - profile
  - email
  - web-origins
defaultOptionalClientScopes:
  - offline_access
  - address
  - phone
  - microprofile-jwt
