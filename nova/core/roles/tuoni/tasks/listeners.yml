---
- name: Listing all listeners...
  ansible.builtin.uri:
    url: https://{{ tuoni_fqdn }}:8443/api/v1/listeners
    method: GET
    headers:
      Authorization: Bearer {{ tuoni_api_token.content }}
    force_basic_auth: true
    body_format: json
    status_code: 200
    validate_certs: false
  register: tuoni_existing_listeners

- name: Creating following listeners...
  ansible.builtin.uri:
    url: https://{{ tuoni_fqdn }}:8443/api/v1/listeners
    method: POST
    headers:
      Authorization: Bearer {{ tuoni_api_token.content }}
    force_basic_auth: true
    body_format: json
    status_code: 200
    validate_certs: false
    body: "{{ item }}"
  loop: "{{ tuoni_listeners }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.name not in tuoni_existing_listeners.json.values() | map(attribute='name')

- name: Updating following listeners...
  ansible.builtin.uri:
    url: https://{{ tuoni_fqdn }}:8443/api/v1/listeners/{{ tuoni_existing_listeners.json.values()
      | selectattr('name', 'equalto', item.name) | map(attribute='id') | first }}
    method: PATCH
    headers:
      Authorization: Bearer {{ tuoni_api_token.content }}
    force_basic_auth: true
    body_format: json
    status_code: 200
    validate_certs: false
    body:
      name: "{{ item.name }}"
      configuration: "{{ item.configuration }}"
  loop: "{{ tuoni_listeners }}"
  loop_control:
    label: "{{ item.name }}"
    index_var: listener_index
  when: item.name in tuoni_existing_listeners.json.values() | list | map(attribute='name')

- name: Re-listing all listeners...
  ansible.builtin.uri:
    url: https://{{ tuoni_fqdn }}:8443/api/v1/listeners
    method: GET
    headers:
      Authorization: Bearer {{ tuoni_api_token.content }}
    force_basic_auth: true
    body_format: json
    status_code: 200
    validate_certs: false
  register: tuoni_created_listeners

- name: Generating payloads...
  when: tuoni_payloads != []
  block:
    - name: Creating following payloads folders...
      ansible.builtin.file:
        path: "{{ tuoni_payloads_path }}/{{ item.name }}"
        state: directory
        owner: root
        group: "{{ ansible_user }}"
        recurse: true
        follow: false
      loop: "{{ tuoni_listeners }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Generating payloads...
      ansible.builtin.uri:
        url: https://{{ tuoni_fqdn }}:8443/api/v1/payloads
        method: POST
        headers:
          Authorization: Bearer {{ tuoni_api_token.content }}
        force_basic_auth: true
        body: "{{ item }}"
        body_format: json
        status_code: 200
        validate_certs: false
      register: tuoni_created_payloads
      loop: "{{ tuoni_payloads }}"
