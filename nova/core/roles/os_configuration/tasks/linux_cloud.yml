---
# Universal
- name: Updating SSHD MaxAuthTries for Cloud {{ inventory_hostname }}...
  when: infra_env in ["aws", "linode", "azure"]
  block:
    - name: Setting SSHD MaxAuthTries to 20...
      ansible.builtin.replace:
        dest: /etc/ssh/sshd_config
        regexp: .*MaxAuthTries.*
        replace: MaxAuthTries 20
      register: maxauthtries

    - name: Restarting SSHD...
      ansible.builtin.systemd:
        name: sshd
        state: restarted
      when: maxauthtries.changed

# AWS
- name: Cleaning up AWS configurations for {{ inventory_hostname }}...
  when: infra_env == "aws"
  block:
    - name: Removing AWS temp ssh key for {{ hostname }}...
      ansible.builtin.file:
        path: "{{ temp_ssh_key_path }}"
        state: absent
      delegate_to: localhost
      become: false

    - name: Checking if {{ aws_template_username }} user exists...
      ansible.builtin.stat:
        path: /home/{{ aws_template_username }}
      register: aws_template_user

    - name: Rebooting and removing {{ aws_template_username }} user...
      when: aws_template_user.stat.exists
      block:
        - name: Rebooting to close any open sessions...
          ansible.builtin.reboot:

        - name: Removing {{ aws_template_username }} account...
          ansible.builtin.user:
            name: "{{ aws_template_username }}"
            state: absent
            remove: true

    - name: Removing cloud managed hostname...
      ansible.builtin.replace:
        dest: /etc/cloud/cloud.cfg
        regexp: ^ - update_etc_hosts
        replace: "# - update_etc_hosts"

- name: Installing Gnome for Ubuntu Desktop...
  ansible.builtin.apt:
    name: ubuntu-gnome-desktop
    state: present
    update_cache: true
  when: "'os_ubuntu_desktop_20_04' in group_names or 'os_ubuntu_desktop_22_04' in group_names"

- name: Installing Xfce for Kali...
  ansible.builtin.apt:
    name: kali-desktop-xfce
    state: present
    update_cache: true
  when: ansible_distribution == "Kali"

- name: Incluing XRDP roles...
  ansible.builtin.include_role:
    name: "{{ item }}"
  loop:
    - nova.core.linux_xrdp_server
    - nova.core.linux_xrdp_keyboard
  when: "'os_ubuntu_desktop_20_04' in group_names or 'os_ubuntu_desktop_22_04' in group_names or 'os_kali' in group_names"

- name: Installing required auth packages...
  ansible.builtin.apt:
    name: libpam-ssh-agent-auth
    state: present
    update_cache: true
  when:
    - use_ssh_agent_for_sudo
    - ansible_os_family == "Debian"
