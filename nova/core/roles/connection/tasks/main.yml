---
- name: Configuring VM connection in vSphere environment...
  ansible.builtin.include_tasks: vsphere.yml
  when: infra_env == 'vsphere'

- name: Configuring VM connection in VMware Workstation environment...
  ansible.builtin.include_tasks: vmware_workstation.yml
  when: infra_env == 'vmware_workstation'

- name: Configuring connection for your host... # The laptop or desktop you are running Ansible from
  ansible.builtin.include_tasks: my_host.yml
  when: infra_env == 'my_host'

- name: Configuring connection in AWS environment...
  ansible.builtin.include_tasks: aws.yml
  when: infra_env == 'aws'

- name: Configuring connection in Linode environment...
  ansible.builtin.include_tasks: linode.yml
  when: infra_env == 'linode'

- name: Configuring connection for external or pre-existing machine...
  ansible.builtin.include_tasks: external.yml
  when: infra_env == 'external'

# Setting it here, because in group_vars or host_vars the play gets really slow
# Must be done after the connection tasks when ansible_password is defined
# Needs to be ansible_deployer_password because accounts role changes connection credentials after changing passwords
- name: Setting become password...
  ansible.builtin.set_fact:
    ansible_become_password: "{{ defined_become_password | default(ansible_deployer_password) }}"
  when:
    - infra_env != 'my_host'
    - sudo_requires_password

# Setting PanOS connection parameters here because the correct ansible_host is calculated no matter what infra_env is used
- name: Setting connection parameters for PanOS {{ inventory_hostname }}...
  ansible.builtin.set_fact:
    panos_connection_params:
      ip_address: "{{ ansible_host }}"
      username: "{{ template_username if fresh_deploy else ansible_deployer_username }}"
      password: "{{ template_password if fresh_deploy else ansible_deployer_password }}"
  when:
    - ansible_network_os is defined
    - ansible_network_os == "panos"

- name: Waiting for {{ inventory_hostname }} to become reachable...
  ansible.builtin.wait_for_connection:
    timeout: 300
  when:
    - not role_only
    - not role_only_wp
    - ansible_system is not defined

- name: Setting wait for connection parameters for MacOS...
  when:
    - ansible_system is defined
    - ansible_system == "Darwin"
  block:
    - name: Waiting for {{ inventory_hostname }} to become reachable...
      ansible.builtin.raw: echo " "
      changed_when: true
      retries: 30
      delay: 5
      until: true
      when:
        - not role_only
        - not role_only_wp
        - not macos_has_python

    - name: Waiting for {{ inventory_hostname }} to become reachable...
      ansible.builtin.wait_for_connection:
        timeout: 300
      when:
        - not role_only
        - not role_only_wp
        - macos_has_python

- name: Including gather_facts role...
  ansible.builtin.include_role:
    name: nova.core.gather_facts

- name: Optimizing Powershell...
  ansible.windows.win_shell: "{{ lookup('file', 'Optimize-PowerShell.ps1') }}"
  when:
    - ansible_system is defined
    - ansible_system == "Win32NT"
    - not role_only
    - not role_only_wp
