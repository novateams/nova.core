---
- name: Gathering RouterOS facts...
  community.routeros.facts:
  retries: 3
  when: ansible_network_os | default(false) == 'community.routeros.routeros'

- name: Gathering VyOS facts...
  vyos.vyos.vyos_facts:
  when: ansible_network_os | default(false) == 'vyos.vyos.vyos'

- name: Gathering Cisco IOS facts...
  cisco.ios.ios_facts:
  when: ansible_network_os | default(false) == 'cisco.ios.ios'

- name: Gathering facts for FortiOS...
  fortinet.fortios.fortios_configuration_fact:
    access_token: "{{ fortios_access_token }}"
    selector: system_global
  when: ansible_network_os | default(false) == 'fortinet.fortios.fortios'

- name: Gathering facts for pfSense/OPNsense...
  ansible.builtin.setup:
    gather_timeout: 60
  when: ansible_network_os | default([]) in ['pfsense', 'opnsense']

- name: Gathering facts for PanOS...
  paloaltonetworks.panos.panos_facts:
    provider: "{{ panos_connection_params }}"
    gather_subset: all
  register: panos_facts
  until: panos_facts is succeeded # To avoid first run failures when the device is not ready yet
  retries: 20
  delay: 3
  delegate_to: localhost
  become: false
  when: ansible_network_os | default(false) == 'panos'

- name: Gathering facts for {{ inventory_hostname }}...
  ansible.builtin.setup:
    gather_timeout: 60
  when:
    - ansible_system | default(false) == "Darwin"
    - macos_has_python

- name: Gathering facts for {{ inventory_hostname }}...
  ansible.builtin.setup:
    gather_timeout: 60
  when:
    - ansible_network_os is not defined
    - ansible_system is not defined or ansible_system != "Darwin"
# # Useful when debugging facts gathered from different operating systems
# - name: Saving ansible_facts to file...
#   ansible.builtin.copy:
#     content: "{{ ansible_facts | to_nice_yaml }}"
#     dest: "{{ inventory_hostname }}.yaml"
#     mode: "0644"
#   delegate_to: localhost
#   become: false
