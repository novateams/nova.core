---
- name: Look up user id
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/users?username={{ user.username }}&with_custom_attributes=true"
    headers:
      Content-Type: application/json
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
  register: gitlab_user
  when: user.username in gl_existing_users.json | map(attribute="username")

- name: Get existing ssh keys for user..
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/users/{{ gitlab_user.json[0].id }}/keys"
    method: GET
    body_format: json
    headers:
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    status_code: [200, 201]
  register: existing_ssh_keys
  when: user.username in gl_existing_users.json | map(attribute="username")

# - name: Cleanup existing ssh keys for user..
#   ansible.builtin.uri:
#     url: "{{ gitlab_url_api }}/users/{{ gitlab_user.json[0].id }}/keys/{{ item.id }}"
#     method: DELETE
#     body_format: json
#     headers:
#       PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
#     status_code: [200, 204]
#   loop: "{{ existing_ssh_keys.json | default([]) }}"
#   when: user.username in gl_existing_users.json | map(attribute="username")

- name: Print user ssh keys, just for info..
  ansible.builtin.debug:
    var: existing_ssh_keys.json

- name: Add ssh keys to user..
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/users/{{ gitlab_user.json[0].id }}/keys"
    method: POST
    body_format: json
    body:
      title: "{{ item.title }}"
      key: "{{ item.key }}"
    headers:
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    status_code: [200, 201]
  when:
    - item.title not in existing_ssh_keys.json | map(attribute="title")
  loop: "{{ user.ssh_keys }}"
