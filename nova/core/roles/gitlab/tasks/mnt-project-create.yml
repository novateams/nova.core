---
- name: Include tasks | look up existing projects..
  ansible.builtin.include_tasks: mnt-project-lookup.yml

- name: Include tasks  | look up existing namespaces..
  ansible.builtin.include_tasks: mnt-namespace-lookup.yml

- name: Set the current project namespace ID variable..
  ansible.builtin.set_fact:
    gl_namespace_id: "{{ (gl_existing_namespaces.json | selectattr('name', 'equalto', project.namespace) | first).id }}"

- name: Set project path variable if not already defined..
  ansible.builtin.set_fact:
    gl_project_path: "{{ project.name | replace(' ', '-') | lower if project.path is not defined else project.path }}"

## This is to be sure that the search is precise, project path is not unique
- name: Searching for the project using namespace and project path..
  ansible.builtin.set_fact:
    gl_matched_projects: "{{ gl_existing_projects | selectattr('namespace.full_path', 'equalto', project.namespace)
      | selectattr('path', 'equalto', gl_project_path) }}"

- name: Set current existing project ID variable..
  ansible.builtin.set_fact:
    gl_project_id: "{{ gl_matched_projects[0].id | default('') }}"

- name: Get a list of repositories for project..
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/projects/{{ gl_project_id }}/registry/repositories"
    method: GET
    headers:
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    status_code: 200
  register: gl_project_repositories
  when:
    - gl_project_id != ''

- name: Mark all container tags for deletion..
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/projects/{{ gl_project_id }}/registry/repositories/{{ gl_project_repositories.json[0].id }}/tags"
    method: DELETE
    headers:
      Content-Type: application/json
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    body_format: json
    body:
      name_regex_delete: .*
    status_code: [200, 202, 400]
  when:
    - gl_project_repositories.json | default([]) | length > 0
    - gl_project_repositories.json[0].id | default('') != ''

- name: Mark the latest container tag for deletion..
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/projects/{{ gl_project_id }}/registry/repositories/{{ gl_project_repositories.json[0].id }}/tags/latest"
    method: DELETE
    headers:
      Content-Type: application/json
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    status_code: [200, 202]
  when:
    - gl_project_repositories.json | default([]) | length > 0
    - gl_project_repositories.json[0].id | default('') != ''

- name: Get tags for repository to verify deletion..
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/projects/{{ gl_project_id }}/registry/repositories/{{ gl_project_repositories.json[0].id }}/tags"
    method: GET
    headers:
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    status_code: 200
  register: gl_project_tags
  until: gl_project_tags.json | default([]) | length == 0
  retries: 50
  delay: 10
  when:
    - gl_project_repositories.json | default([]) | length > 0
    - gl_project_repositories.json[0].id | default('') != ''

- name: Mark the project for deletion..
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/projects/{{ gl_project_id }}"
    method: DELETE
    headers:
      Content-Type: application/json
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    status_code: [200, 202]
  when:
    - gl_project_id != ''

- name: Creating the project..
  ansible.builtin.uri:
    url: "{{ gitlab_url_api }}/projects"
    method: POST
    headers:
      Content-Type: application/json
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    body_format: json
    body:
      name: "{{ project.name }}"
      path: "{{ gl_project_path }}"
      namespace_id: "{{ gl_namespace_id }}"
      description: "{{ project.description | default(project.name) }}"
      visibility: "{{ project.visibility | default('public') }}"
      initialize_with_readme: false
    status_code: [200, 201]
  register: result
  retries: 10
  delay: 5
  until: result is not failed

- name: Block - sync from role files..
  when:
    - project.source is defined
    - project.source == "files"
    - project.source_path is defined
  block:
    - name: Make temporary dir..
      ansible.builtin.file:
        state: directory
        path: "/tmp/repo_{{ inventory_hostname }}_{{ gl_project_path }}/"
        mode: "0755"
      become: false

    - name: Synchronizing project files to target gitlab /tmp dir..
      ansible.posix.synchronize:
        src: "{{ project.source_path }}/"
        dest: "/tmp/repo_{{ inventory_hostname }}_{{ gl_project_path }}"
        recursive: true
        rsync_opts:
          - --chown=root:root
        use_ssh_args: "yes"
      delegate_to: localhost
      become: false

    - name: Template overrides to repo..
      ansible.builtin.template:
        src: "{{ template_item.src }}"
        dest: "/tmp/repo_{{ inventory_hostname }}_{{ gl_project_path }}/{{ template_item.path }}"
        mode: "0644"
      loop: "{{ query('ansible.builtin.filetree', ansible_parent_role_paths[0] + '/templates/' + project.local_templates_path) }}"
      loop_control:
        loop_var: template_item
        label: "{{ template_item.path }}"
      when:
        - project.local_templates_path is defined
        - "'src' in template_item"

- name: Block - sync from a remote repository..
  when:
    - project.source is defined
    - project.source == "repository"
    - project.source_url is defined
  block:
    - name: Make temporary dir
      ansible.builtin.tempfile:
        state: directory
        suffix: "repo-{{ gl_project_path }}"
      register: gl_tmpdir
      delegate_to: localhost
      become: false

    - name: Clone the {{ project.name }} repository to local dir..
      ansible.builtin.git:
        repo: "{{ project.source_url }}"
        dest: "{{ gl_tmpdir.path }}"
        version: "{{ project.source_version | default('HEAD') }}"
        depth: 1
      delegate_to: localhost
      changed_when: false
      become: false

    - name: Remove the .git directory from the tmpdir..
      ansible.builtin.file:
        path: "{{ gl_tmpdir.path }}/.git"
        state: absent
      delegate_to: localhost
      become: false

    - name: Template overrides to repo..
      ansible.builtin.template:
        src: "{{ template_item.src }}"
        dest: "{{ gl_tmpdir.path }}/{{ project.pushable_subdir | default('') }}/{{ template_item.path }}"
        mode: "0644"
      delegate_to: localhost
      loop: "{{ query('ansible.builtin.filetree', ansible_parent_role_paths[0] + '/templates/' + project.local_templates_path) }}"
      loop_control:
        loop_var: template_item
        label: "{{ template_item.path }}"
      when:
        - project.local_templates_path is defined
        - "'src' in template_item"

    - name: Sync project files from catapult to target gitlab /tmp dir..
      ansible.posix.synchronize:
        src: "{{ gl_tmpdir.path }}/{{ project.pushable_subdir | default('') }}/"
        dest: "/tmp/repo_{{ inventory_hostname }}_{{ gl_project_path }}"
        recursive: true
        rsync_opts:
          - --chown=root:root
        use_ssh_args: "yes"
      delegate_to: localhost
      become: false

    - name: Cleanup {{ gl_tmpdir.path | default('') }} tmp folder..
      ansible.builtin.file:
        path: "{{ gl_tmpdir.path }}"
        state: absent
      delegate_to: localhost
      become: false

- name: Commit project to target gitlab..
  ansible.builtin.shell: |
    set -ex
    token={{ gitlab_root_personal_token }}
    cd /tmp/repo_{{ inventory_hostname }}_{{ gl_project_path }}/
    git init --initial-branch=main
    git config user.name "{{ gitlab_git_user_name }}"
    git config user.email "{{ gitlab_git_user_email }}"
    git remote add origin https://gitlab-ci-token:${token}@{{ gitlab_fqdn }}/{{ project.namespace }}/{{ gl_project_path }}.git
    git add .
    git commit -m "{{ project.commit_message | default('Initial commit') }}"
    git push --set-upstream origin main
    echo yo
  changed_when: false
  when:
    - project.source is defined

- name: Cleanup tmp folder on target gitlab..
  ansible.builtin.file:
    path: "/tmp/repo_{{ inventory_hostname }}_{{ gl_project_path }}/"
    state: absent
